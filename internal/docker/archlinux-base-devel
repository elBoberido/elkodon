# syntax=docker/dockerfile:1

# Select base image
FROM archlinux:base-devel

# Add '/root/.cargo/bin' to path; this is required sind '.cargo/env' cannot easily be sourced in the docker image
ENV PATH="/root/.cargo/bin:$PATH"

# Minimize the number of layers (RUN, COPY and ADD create layers)
# https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#minimize-the-number-of-layers
RUN echo "#### Installing dependencies" \
  && pacman -Syu --noconfirm \
       clang \
       git \
  && pacman -Scc --noconfirm \
  && echo "#### Install minimal Rust toolchain" \
  && curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --no-modify-path \
  && echo "#### Adding beta and nightly toolchain" \
  && rustup toolchain add \
       beta \
       nightly \
  && echo "#### Adding more components like 'clippy', 'rustfmt', etc." \
  && rustup component add \
       clippy \
       llvm-tools-preview \
       rustfmt \
  && echo "#### Installing cargo-nextest" \
  && cargo install cargo-nextest --locked \
  && echo "#### Creating users and groups required for tests" \
  && useradd testuser1 \
  && useradd testuser2 \
  && groupadd testgroup1 \
  && groupadd testgroup2

# Set additional environment variables, e.g. 'ENV FOO=BAR'
