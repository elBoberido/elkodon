
[D] SharedMemoryBuilder { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2026577168952367491380388841361283_2026735625277396020055575930945366.connection" } }, size: 174, is_memory_locked: false, has_ownership: true, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, creation_mode: Some(OpenOrCreate), zero_memory: true, access_mode: ReadWrite, enforce_base_address: None }              | Unable to open shared memory since the shared memory does not exist.       23

[D] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | Unable to create file since the file already exists.       24

[D] Builder { storage_name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, has_ownership: false, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } } }              | Unable to create target directory "/tmp/elkodon/services" due to a failure while creating the underlying file.       25

[D] BuilderWithServiceType { service_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }              | Failed to create static service information since the underlying static storage could not be created.       26

[D] Builder { base: BuilderWithServiceType { service_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }, verify_number_of_subscribers: true, verify_number_of_publishers: true, verify_subscriber_max_buffer_size: true, verify_subscriber_max_borrowed_samples: false, verify_publisher_history_size: true, verify_enable_safe_overflow: true }        9

[D] SharedMemoryBuilder { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2026577168952367491380388841361283_2026814853439910284393169475024050.connection" } }, size: 174, is_memory_locked: false, has_ownership: true, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, creation_mode: Some(OpenOrCreate), zero_memory: true, access_mode: ReadWrite, enforce_base_address: None }              | Unable to open shared memory since the shared memory does not exist.       26

[D] "static_storage::file::Storage::does_exist_cfg()"              | Unable to check if storage "997d262bc0336c4d88c8f16aab3bc27956f9b75e" exists since the underlying resources are currently being created or the creation process hangs.       27

[D] BuilderWithServiceType { service_config: StaticConfig { uuid: "997d262bc0336c4d88c8f16aab3bc27956f9b75e", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/follower" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }              | Unable to create publish subscribe service since the static service information could not be created.              | Unable to check if the service is available since it is currently being created.       28

[D] Builder { base: BuilderWithServiceType { service_config: StaticConfig { uuid: "997d262bc0336c4d88c8f16aab3bc27956f9b75e", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/follower" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }, verify_number_of_subscribers: true, verify_number_of_publishers: true, verify_subscriber_max_buffer_size: true, verify_subscriber_max_borrowed_samples: false, verify_publisher_history_size: true, verify_enable_safe_overflow: true }              | Unable to open publish subscribe service since the service does not exist.       19

[D] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | Unable to receive data since an interrupt signal was received.       20

[D] Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "25579_2026577168952367491380388841220354" } }, _data: PhantomData<elkodon::port::event_id::EventId> }              | Unable to wait for signal with timeout 1s on event::unix_datagram_socket::Listener due to an unknown failure (Interrupt).       21

[D] Listener { _dynamic_config_guard: Some(UniqueIndex { value: 0, index_set addr: 0x7ffc7ab1d2d0 }), listener: Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "25579_2026577168952367491380388841220354" } }, _data: PhantomData<elkodon::port::event_id::EventId> }, cache:

[], _phantom_a: PhantomData<&elkodon::service::zero_copy::Service>, _phantom_b: PhantomData<&()> }              | Failed to timed_wait with timeout 1s on Listener port since the underlying Listener concept failed.       22

[D] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | Unable to receive data since an interrupt signal was received.       23

[D] Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "25579_2026577168952367491380388841220354" } }, _data: PhantomData<elkodon::port::event_id::EventId> }              | Unable to wait for signal with timeout 1s on event::unix_datagram_socket::Listener due to an unknown failure (Interrupt).       24

[D] Listener { _dynamic_config_guard: Some(UniqueIndex { value: 0, index_set addr: 0x7ffc7ab1d2d0 }), listener: Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_25579_2026577168952367491380388841220354.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "25579_2026577168952367491380388841220354" } }, _data: PhantomData<elkodon::port::event_id::EventId> }, cache:

[], _phantom_a: PhantomData<&elkodon::service::zero_copy::Service>, _phantom_b: PhantomData<&()> }              | Failed to timed_wait with timeout 1s on Listener port since the underlying Listener concept failed.
