[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 19, data: "config/elkodon.toml" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        1

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Loaded.        2

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Set as global config.        3

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created        4

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f6493ffd000, has_ownership: false, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | create        5

[T] ServiceState { static_config: StaticConfig { uuid: "e1708352766189fa0daed05176e699689429eca8", service_name: ServiceName { value: FixedSizeByteString<255> { len: 17, data: "bench/event/ready" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f6493ffd000, has_ownership: false, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }), file_descriptor: FileDescriptor { value: 3, is_owned: true } }, len: 171 } }              | open service        6

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | create and listening        7

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created        8

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f6493fc0000, has_ownership: false, file_descriptor: FileDescriptor { value: 7, is_owned: true }, memory_lock: None }              | create        9

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f6493fc0000, has_ownership: false, file_descriptor: FileDescriptor { value: 7, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 6, is_owned: true } }, len: 372 } }              | open service       10

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f6493fbf000, has_ownership: true, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | create       11

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created       12

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f6493fbe000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | create       13

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f6493fbe000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 9, is_owned: true } }, len: 174 } }              | open service       14

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created       15

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f6493fbd000, has_ownership: false, file_descriptor: FileDescriptor { value: 12, is_owned: true }, memory_lock: None }              | create       16

[T] ServiceState { static_config: StaticConfig { uuid: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1", service_name: ServiceName { value: FixedSizeByteString<255> { len: 13, data: "bench/latency" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 2, history_size: 0, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::LatencyTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f6493fbd000, has_ownership: false, file_descriptor: FileDescriptor { value: 12, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }), file_descriptor: FileDescriptor { value: 11, is_owned: true } }, len: 370 } }              | open serviceSpawning 'leader' and 'follower' process ...
... done
        0

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 19, data: "config/elkodon.toml" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        1

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Loaded.        2

[T]         0

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 19, data: "config/elkodon.toml" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        1

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Loaded.        2

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Set as global config.        3

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        4

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        5

[T] Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }              | Set as global config.        3

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        4

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        5

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        6

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        7

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f797dd78000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | open        8

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f797dd78000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 7, is_owned: true } }, len: 372 } }              | open service        9

[D] SharedMemoryBuilder { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466531155394077358045971082999946.connection" } }, size: 174, is_memory_locked: false, has_ownership: true, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, creation_mode: Some(OpenOrCreate), zero_memory: true, access_mode: ReadWrite, enforce_base_address: None }              | Unable to open shared memory since the shared memory does not exist.       10

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466531155394077358045971082999946.connection" } }, size: 174, base_address: 0x7f797dd3b000, has_ownership: true, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | create       11

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        6

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened        7

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f0763907000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | open        8

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f0763907000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 7, is_owned: true } }, len: 372 } }SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f797dd3a000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | open       12

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       13

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       14

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       15

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       16

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f797dd39000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }              |               | open service        9

[D] SharedMemoryBuilder { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466610383556591622383564627111736.connection" } }, size: 174, is_memory_locked: false, has_ownership: true, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, creation_mode: Some(OpenOrCreate), zero_memory: true, access_mode: ReadWrite, enforce_base_address: None }              | Unable to open shared memory since the shared memory does not exist.       10

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466610383556591622383564627111736.connection" } }, size: 174, base_address: 0x7f07638ca000, has_ownership: true, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | create       11

[T] open       17

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f797dd39000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 13, is_owned: true } }, len: 174 } }SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f07638c9000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | open       12

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       13

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened                 | open service       18

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31132_2466531155394077358045971083314329.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 12, is_owned: true } } }              | create and listening       19

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created       20

[T]     14

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       15

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       16

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f07638c8000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }              | open       17

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f07638c8000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 13, is_owned: true } }, len: 174 } }SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, size: 238, base_address: 0x7f797dd38000, has_ownership: false, file_descriptor: FileDescriptor { value: 16, is_owned: true }, memory_lock: None }              | create       21

[T] ServiceState { static_config: StaticConfig { uuid: "997d262bc0336c4d88c8f16aab3bc27956f9b75e", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/follower" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, size: 238, base_address: 0x7f797dd38000, has_ownership: false, file_descriptor: FileDescriptor { value: 16, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "997d262bc0336c4d88c8f16aab3bc27956f9b75e" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "997d262bc0336c4d88c8f16aab3bc27956f9b75e" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }), file_descriptor: FileDescriptor { value: 15, is_owned: true } }, len: 375 } }              | open service       18

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31133_2466610383556591622383564627468173.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 12, is_owned: true } } }              | create and listening       19

[D] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | Unable to create file since the file already exists.       20

[D]               | open service       22

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083521622.publisher_data" } }, size: 6645, base_address: 0x7f797dd36000, has_ownership: true, file_descriptor: FileDescriptor { value: 17, is_owned: true }, memory_lock: None }              | create       23

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, access_mode: ReadWrite, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: Some(CreateExclusive) }              | created       24

[T] Builder { storage_name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, has_ownership: false, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } } }              | Unable to create target directory "/tmp/elkodon/services" due to a failure while creating the underlying file.       21

[D] BuilderWithServiceType { service_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }              | Failed to create static service information since the underlying static storage could not be created.       22

[D] Builder { base: BuilderWithServiceType { service_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, _phantom_data: PhantomData<elkodon::service::zero_copy::Service>, _phantom_lifetime_b: PhantomData<&()> }, verify_number_of_subscribers: true, verify_number_of_publishers: true, verify_subscriber_max_buffer_size: true, verify_subscriber_max_borrowed_samples: false, verify_publisher_history_size: true, verify_enable_safe_overflow: true }SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, size: 238, base_address: 0x7f797dd35000, has_ownership: false, file_descriptor: FileDescriptor { value: 19, is_owned: true }, memory_lock: None }              | create       25

[T] ServiceState { static_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, size: 238, base_address: 0x7f797dd35000, has_ownership: false, file_descriptor: FileDescriptor { value: 19, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }), file_descriptor: FileDescriptor { value: 18, is_owned: true } }, len: 373 } }              | Unable to create publish subscribe service since the static service information could not be created.       23

[T] "File::remove"              | "/tmp/elk_31133_2466610383556591622383564627468173.event"       24

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31133_2466610383556591622383564627468173.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 12, is_owned: true } } }              | stop listening and remove       25

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f07638c8000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 13, is_owned: true } }, len: 174 } }              | open service       26

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       27

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       28

[T]               | close service       26

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f07638c8000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }              | close       27

[T] "SharedMemory::remove"              | "elk_2466372699069048829370783993081752_2466610383556591622383564627111736.connection"       28

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466610383556591622383564627111736.connection" } }, size: 174, base_address: 0x7f07638ca000, has_ownership: false, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | close       29

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f07638c9000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | close       30

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f0763907000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 7, is_owned: true } }, len: 372 } }              | close service       31

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f0763907000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | closeFileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       29

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       30

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f797dd34000, has_ownership: false, file_descriptor: FileDescriptor { value: 22, is_owned: true }, memory_lock: None }              | open       31

[T] ServiceState { static_config: StaticConfig { uuid: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1", service_name: ServiceName { value: FixedSizeByteString<255> { len: 13, data: "bench/latency" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 2, history_size: 0, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::LatencyTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f797dd34000, has_ownership: false, file_descriptor: FileDescriptor { value: 22, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }), file_descriptor: FileDescriptor { value: 21, is_owned: true } }, len: 370 } }       17

[D] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | Unable to receive data since an interrupt signal was received.       18

[D] Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "31130_2466372699069048829370783992792961" } }, _data: PhantomData<elkodon::port::event_id::EventId> }              | Unable to wait for signal with timeout 1s on event::unix_datagram_socket::Listener due to an unknown failure (Interrupt).       19

[D]               | open service       32

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083922754.publisher_data" } }, size: 560000449, base_address: 0x7f795c3f1000, has_ownership: true, file_descriptor: FileDescriptor { value: 20, is_owned: true }, memory_lock: None }              | create       33

[D] SharedMemoryBuilder { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466531155394077358045971083922754_2466372699069048829370783993557177.connection" } }, size: 190, is_memory_locked: false, has_ownership: true, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, creation_mode: Some(OpenOrCreate), zero_memory: true, access_mode: ReadWrite, enforce_base_address: None }              | Unable to open shared memory since the shared memory does not exist.       34

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466531155394077358045971083922754_2466372699069048829370783993557177.connection" } }, size: 190, base_address: 0x7f797dd33000, has_ownership: true, file_descriptor: FileDescriptor { value: 23, is_owned: true }, memory_lock: None }              | create       35

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       36

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       37

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       38

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       39

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f797dd32000, has_ownership: false, file_descriptor: FileDescriptor { value: 26, is_owned: true }, memory_lock: None }              | open       40

[T] ServiceState { static_config: StaticConfig { uuid: "e1708352766189fa0daed05176e699689429eca8", service_name: ServiceName { value: FixedSizeByteString<255> { len: 17, data: "bench/event/ready" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f797dd32000, has_ownership: false, file_descriptor: FileDescriptor { value: 26, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }), file_descriptor: FileDescriptor { value: 25, is_owned: true } }, len: 171 } }              | open service       41

[T] UnixDatagramSender { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 24, is_owned: true } } }              | connected       42

[T] UnixDatagramSender { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: true, file_descriptor: FileDescriptor { value: 24, is_owned: true } } }              | disconnected       43

[T] ServiceState { static_config: StaticConfig { uuid: "e1708352766189fa0daed05176e699689429eca8", service_name: ServiceName { value: FixedSizeByteString<255> { len: 17, data: "bench/event/ready" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f797dd32000, has_ownership: false, file_descriptor: FileDescriptor { value: 26, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }), file_descriptor: FileDescriptor { value: 25, is_owned: true } }, len: 171 } }              | close service       44

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f797dd32000, has_ownership: false, file_descriptor: FileDescriptor { value: 26, is_owned: true }, memory_lock: None }              | close       45

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083922754.publisher_data" } }, size: 560000449, base_address: 0x7f795c3f1000, has_ownership: true, file_descriptor: FileDescriptor { value: 20, is_owned: true }, memory_lock: None }              | close       46

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083922754.publisher_data" } }, size: 560000449, base_address: 0x7f795c3f1000, has_ownership: true, file_descriptor: FileDescriptor { value: 20, is_owned: true }, memory_lock: None }              | delete       47

[T] "SharedMemory::remove"              | "elk_2466531155394077358045971083922754_2466372699069048829370783993557177.connection"       48

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466531155394077358045971083922754_2466372699069048829370783993557177.connection" } }, size: 190, base_address: 0x7f797dd33000, has_ownership: false, file_descriptor: FileDescriptor { value: 23, is_owned: true }, memory_lock: None }              | close       49

[T] ServiceState { static_config: StaticConfig { uuid: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1", service_name: ServiceName { value: FixedSizeByteString<255> { len: 13, data: "bench/latency" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 2, history_size: 0, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::LatencyTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f797dd34000, has_ownership: false, file_descriptor: FileDescriptor { value: 22, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }), file_descriptor: FileDescriptor { value: 21, is_owned: true } }, len: 370 } }              | close service       50

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f797dd34000, has_ownership: false, file_descriptor: FileDescriptor { value: 22, is_owned: true }, memory_lock: None }              | close       51

[T] ServiceState { static_config: StaticConfig { uuid: "e9c298c3f2ce051fd462657c88b3a84321a9d318", service_name: ServiceName { value: FixedSizeByteString<255> { len: 12, data: "bench/leader" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, size: 238, base_address: 0x7f797dd35000, has_ownership: true, file_descriptor: FileDescriptor { value: 19, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e9c298c3f2ce051fd462657c88b3a84321a9d318" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }), file_descriptor: FileDescriptor { value: 18, is_owned: true } }, len: 373 } }              | close and remove service       52

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, size: 238, base_address: 0x7f797dd35000, has_ownership: true, file_descriptor: FileDescriptor { value: 19, is_owned: true }, memory_lock: None }              | close       53

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, size: 238, base_address: 0x7f797dd35000, has_ownership: true, file_descriptor: FileDescriptor { value: 19, is_owned: true }, memory_lock: None }              | delete       54

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       55

[T] "File::remove"              | "/tmp/elkodon/services/elk_e9c298c3f2ce051fd462657c88b3a84321a9d318.dynamic"       56

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083521622.publisher_data" } }, size: 6645, base_address: 0x7f797dd36000, has_ownership: true, file_descriptor: FileDescriptor { value: 17, is_owned: true }, memory_lock: None }              | close       57

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31132_2466531155394077358045971083521622.publisher_data" } }, size: 6645, base_address: 0x7f797dd36000, has_ownership: true, file_descriptor: FileDescriptor { value: 17, is_owned: true }, memory_lock: None }              | delete       58

[T] ServiceState { static_config: StaticConfig { uuid: "997d262bc0336c4d88c8f16aab3bc27956f9b75e", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/follower" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::BenchTopic<1024>" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, size: 238, base_address: 0x7f797dd38000, has_ownership: true, file_descriptor: FileDescriptor { value: 16, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "997d262bc0336c4d88c8f16aab3bc27956f9b75e" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "997d262bc0336c4d88c8f16aab3bc27956f9b75e" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }), file_descriptor: FileDescriptor { value: 15, is_owned: true } }, len: 375 } }              | close and remove service       59

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, size: 238, base_address: 0x7f797dd38000, has_ownership: true, file_descriptor: FileDescriptor { value: 16, is_owned: true }, memory_lock: None }              | close       60

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, size: 238, base_address: 0x7f797dd38000, has_ownership: true, file_descriptor: FileDescriptor { value: 16, is_owned: true }, memory_lock: None }              | delete       61

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       62

[T] "File::remove"              | "/tmp/elkodon/services/elk_997d262bc0336c4d88c8f16aab3bc27956f9b75e.dynamic"       63

[T] "File::remove"              | "/tmp/elk_31132_2466531155394077358045971083314329.event"       64

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31132_2466531155394077358045971083314329.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 12, is_owned: true } } }              | stop listening and remove       65

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f797dd39000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 13, is_owned: true } }, len: 174 } }              | close service       66

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f797dd39000, has_ownership: false, file_descriptor: FileDescriptor { value: 14, is_owned: true }, memory_lock: None }              | close       67

[T] "SharedMemory::remove"              | "elk_2466372699069048829370783993081752_2466531155394077358045971082999946.connection"       68

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 84, data: "elk_2466372699069048829370783993081752_2466531155394077358045971082999946.connection" } }, size: 174, base_address: 0x7f797dd3b000, has_ownership: false, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | close       69

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f797dd3a000, has_ownership: false, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | close       70

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f797dd78000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: false, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 7, is_owned: true } }, len: 372 } }              | close service       71

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f797dd78000, has_ownership: false, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | closeListener { _dynamic_config_guard: Some(UniqueIndex { value: 0, index_set addr: 0x7ffc4b00e820 }), listener: Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "31130_2466372699069048829370783992792961" } }, _data: PhantomData<elkodon::port::event_id::EventId> }, cache:

[], _phantom_a: PhantomData<&elkodon::service::zero_copy::Service>, _phantom_b: PhantomData<&()> }              | Failed to timed_wait with timeout 1s on Listener port since the underlying Listener concept failed.       20

[D] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | Unable to receive data since an interrupt signal was received.       21

[D] Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "31130_2466372699069048829370783992792961" } }, _data: PhantomData<elkodon::port::event_id::EventId> }              | Unable to wait for signal with timeout 1s on event::unix_datagram_socket::Listener due to an unknown failure (Interrupt).       22

[D] Listener { _dynamic_config_guard: Some(UniqueIndex { value: 0, index_set addr: 0x7ffc4b00e820 }), listener: Listener { receiver: UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "31130_2466372699069048829370783992792961" } }, _data: PhantomData<elkodon::port::event_id::EventId> }, cache:

[], _phantom_a: PhantomData<&elkodon::service::zero_copy::Service>, _phantom_b: PhantomData<&()> }              | Failed to timed_wait with timeout 1s on Listener port since the underlying Listener concept failed.       23

[T] ServiceState { static_config: StaticConfig { uuid: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1", service_name: ServiceName { value: FixedSizeByteString<255> { len: 13, data: "bench/latency" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 1, max_publishers: 2, history_size: 0, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::LatencyTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f6493fbd000, has_ownership: true, file_descriptor: FileDescriptor { value: 12, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "43c0098e75f5cc0e3a765050f75f048ddb86d9d1" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }), file_descriptor: FileDescriptor { value: 11, is_owned: true } }, len: 370 } }              | close and remove service       24

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f6493fbd000, has_ownership: true, file_descriptor: FileDescriptor { value: 12, is_owned: true }, memory_lock: None }              | close       25

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, size: 259, base_address: 0x7f6493fbd000, has_ownership: true, file_descriptor: FileDescriptor { value: 12, is_owned: true }, memory_lock: None }              | delete       26

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       27

[T] "File::remove"              | "/tmp/elkodon/services/elk_43c0098e75f5cc0e3a765050f75f048ddb86d9d1.dynamic"       28

[T] ServiceState { static_config: StaticConfig { uuid: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09", service_name: ServiceName { value: FixedSizeByteString<255> { len: 20, data: "bench/event/settings" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f6493fbe000, has_ownership: true, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }), file_descriptor: FileDescriptor { value: 9, is_owned: true } }, len: 174 } }              | close and remove service       29

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f6493fbe000, has_ownership: true, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | close       30

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, size: 574, base_address: 0x7f6493fbe000, has_ownership: true, file_descriptor: FileDescriptor { value: 10, is_owned: true }, memory_lock: None }              | delete       31

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       32

[T] "File::remove"              | "/tmp/elkodon/services/elk_bba3fe2f08b1cb261f3a1cb4e4f99d18f6834d09.dynamic"       33

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f6493fbf000, has_ownership: true, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | close       34

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 59, data: "elk_31130_2466372699069048829370783993081752.publisher_data" } }, size: 537, base_address: 0x7f6493fbf000, has_ownership: true, file_descriptor: FileDescriptor { value: 8, is_owned: true }, memory_lock: None }              | delete       35

[T] ServiceState { static_config: StaticConfig { uuid: "67fcdcb0d57e35d672f1673db917c726c52d397a", service_name: ServiceName { value: FixedSizeByteString<255> { len: 14, data: "bench/settings" } }, messaging_pattern: PublishSubscribe(StaticConfig { max_subscribers: 2, max_publishers: 1, history_size: 0, subscriber_max_buffer_size: 1, subscriber_max_borrowed_samples: 2, enable_safe_overflow: false, type_name: "benchmark_multi_process_publish_subscribe::setup::SettingsTopic" }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f6493fc0000, has_ownership: true, file_descriptor: FileDescriptor { value: 7, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "67fcdcb0d57e35d672f1673db917c726c52d397a" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }), file_descriptor: FileDescriptor { value: 6, is_owned: true } }, len: 372 } }              | close and remove service       36

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f6493fc0000, has_ownership: true, file_descriptor: FileDescriptor { value: 7, is_owned: true }, memory_lock: None }              | close       37

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, size: 259, base_address: 0x7f6493fc0000, has_ownership: true, file_descriptor: FileDescriptor { value: 7, is_owned: true }, memory_lock: None }              | delete       38

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       39

[T] "File::remove"              | "/tmp/elkodon/services/elk_67fcdcb0d57e35d672f1673db917c726c52d397a.dynamic"       40

[T] "File::remove"              | "/tmp/elk_31130_2466372699069048829370783992792961.event"       41

[T] UnixDatagramReceiver { socket: UnixDatagramSocket { name: FilePath { value: FixedSizeByteString<4096> { len: 55, data: "/tmp/elk_31130_2466372699069048829370783992792961.event" } }, is_non_blocking: false, file_descriptor: FileDescriptor { value: 5, is_owned: true } } }              | stop listening and remove       42

[T] ServiceState { static_config: StaticConfig { uuid: "e1708352766189fa0daed05176e699689429eca8", service_name: ServiceName { value: FixedSizeByteString<255> { len: 17, data: "bench/event/ready" } }, messaging_pattern: Event(StaticConfig { max_notifiers: 16, max_listeners: 2 }) }, global_config: Config { global: Global { root_path: "/tmp/elkodon/", prefix: "elk_", service: Service { directory: "services", publisher_data_segment_suffix: ".publisher_data", static_config_storage_suffix: ".service", dynamic_config_storage_suffix: ".dynamic", creation_timeout: 500ms, connection_suffix: ".connection" } }, defaults: Defaults { publish_subscribe: PublishSubscribe { max_subscribers: 8, max_publishers: 2, subscriber_max_buffer_size: 2, subscriber_max_borrowed_samples: 2, publisher_max_loaned_samples: 2, publisher_history_size: 1, enable_safe_overflow: true, unable_to_deliver_strategy: Block }, event: Event { max_listeners: 2, max_notifiers: 16 } } }, dynamic_storage: Storage { shm: SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f6493ffd000, has_ownership: true, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }, name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, _phantom_data: PhantomData<elkodon::service::dynamic_config::DynamicConfig> }, static_storage: Storage { name: FileName { value: FixedSizeByteString<255> { len: 40, data: "e1708352766189fa0daed05176e699689429eca8" } }, config: Configuration { path: Path { value: FixedSizeByteString<4096> { len: 21, data: "/tmp/elkodon/services" } }, suffix: FileName { value: FixedSizeByteString<255> { len: 8, data: ".dynamic" } }, prefix: FileName { value: FixedSizeByteString<255> { len: 4, data: "elk_" } } }, has_ownership: true, file: File { path: Some(FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }), file_descriptor: FileDescriptor { value: 3, is_owned: true } }, len: 171 } }              | close and remove service       43

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f6493ffd000, has_ownership: true, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | close       44

[T] SharedMemory { name: FileName { value: FixedSizeByteString<255> { len: 52, data: "elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, size: 574, base_address: 0x7f6493ffd000, has_ownership: true, file_descriptor: FileDescriptor { value: 4, is_owned: true }, memory_lock: None }              | delete       45

[T] FileBuilder { file_path: FilePath { value: FixedSizeByteString<4096> { len: 74, data: "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic" } }, access_mode: Read, permission: OWNER_READ | OWNER_WRITE | OWNER_EXEC | OWNER_ALL, owner: None, group: None, truncate_size: None, creation_mode: None }              | opened       46

[T] "File::remove"              | "/tmp/elkodon/services/elk_e1708352766189fa0daed05176e699689429eca8.dynamic"
